services:
  bot:
    build:
      context: .
      args:
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_NAME: ${DB_NAME}
    command: python bot.py
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
    #depends_on:
     # - db
    networks:
      - default
  web:
    build:
      context: .
      args:
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_NAME: ${DB_NAME}
    command: gunicorn --bind 0.0.0.0:8000 app:app
    ports:
      - "8000:8000"
    networks:
      - default
    #depends_on:
     # - db
  db:
    image: postgres:latest  # Use PostgreSQL image
    networks:
      - default
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command:
      - postgres
      - -c
      - 'initdb --username=${DB_USER} --pwfile=/docker-entrypoint-initdb.d/initdb.sql'

volumes:
  postgres_data:

networks:
  default:
    name: rrddb_test
    external: false